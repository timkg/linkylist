define("lib/module",[],function(){function e(e,t){if(!e)throw new TypeError("Module definition requires a name");this.name=e;for(var n in t)t.hasOwnProperty(n)&&(this[n]=t[n])}return e}),function(){var e="backbone";define("lib/socketModel",[e],function(e){var t=e.Model.extend({initSocketListeners:function(){if(!this.socketEvents)return;var e=this;_.each(this.socketEvents,function(t,n,r){if(typeof e[t]!="function")throw new TypeError("socketEvents needs to hold list of strings of function names");e.socket.on(n,_.bind(e[t],e))})}});return t})}(),function(){define("models/linkModel",["lib/socketModel"],function(e){var t=e.extend({validate:function(e){if(!e.url)throw new TypeError("LinkModel requires url attribute")},socketEvents:{},initialize:function(e,t){var n=t.get("_");this.set(e,{validate:!0}),this.socket=t.get("socket"),this.app=t,this.socketEvents["link/"+this.get("url")]="onGet",this.initSocketListeners(),this.socket.emit("link/get",{url:this.get("url")}),this.socket.on("link/"+this.get("_id")+"/update",n.bind(this.onUpdate.bind,this))},onGet:function(e){console.log("onGet",e),this.set(e)},onUpdate:function(e){console.log("onUpdate",e),this.set(e)}});return t})}(),function(){var e="backbone";define("lib/socketCollection",[e],function(e){var t=e.Collection.extend({initSocketListeners:function(){if(!this.socketEvents)return;var e=this;_.each(this.socketEvents,function(t,n,r){if(typeof e[t]!="function")throw new TypeError("socketEvents needs to hold list of strings of function names");e.socket.on(n,_.bind(e[t],e))})}});return t})}(),function(){define("collections/linkBoardCollection",["lib/socketCollection"],function(e){var t=e.extend({socketEvents:{},initialize:function(e,t,n,r){this.app=t,this.ui=n,this.id=r,this.socket=t.get("socket"),this.socketEvents["board/"+this.id]="onBoardEvents",this.initSocketListeners()},onBoardEvents:function(e){e.error&&console.log("boardEvents error",e.error),"board/add/link"in e&&this.onLinkAdded(e["board/add/link"])},onLinkAdded:function(e){var t=this.findWhere({url:e.url});t.set({preview:e.preview})}});return t})}(),function(){var e="backbone";define("views/linkBoardView",[e],function(e){var t=e.View.extend({tagName:"article",className:"link-item",initialize:function(){var e=this;this.app=this.options.app,this.ui=this.options.ui,this.template=this.ui.templates.link.linkBoardItem,this.model.on("change",function(){e.render()})},render:function(){var e=this.template({link:this.model.toJSON()});return this.$el.html(e),this.$el}});return t})}(),function(){var e="backbone";define("lib/collectionView",[e],function(e){var t=e.View.extend({parseModels:function(){if(!this.itemSelector)return!1;var e,t=[];return e=this.ui.$(this.itemSelector),e.each(function(e,n){var r,i;r=$(n).attr("id"),i=$(n).data("json"),i?t.push(i):t.push({id:r})}),t}});return t})}(),function(){define("views/linkBoardCollectionView",["lib/collectionView"],function(e){var t=e.extend({initialize:function(){var e=this;this.app=this.options.app,this.ui=this.options.ui,this.collection=this.options.collection,this.itemView=this.options.itemView,this.itemSelector=this.options.itemSelector,this.collection.on("add",function(t,n,r){e.onLinkAdd(t)})},onLinkAdd:function(e){var t=new this.itemView({model:e,app:this.app,ui:this.ui}),n=t.render();this.$el.prepend(n)}});return t})}(),function(){define("modules/board",["lib/module","models/linkModel","collections/linkBoardCollection","views/linkBoardView","views/linkBoardCollectionView"],function(e,t,n,r,i){var s=new e("board",{init:function(e,t){var s,o,u;s=t.$('[data-module="board"]'),u=s.attr("id"),o=s.find(".row.board"),this.app=e,this.socket=e.get("socket"),this.ui=t,this.id=u,this.collection=new n([],e,t,u),this.collectionView=new i({el:o[0],collection:this.collection,app:e,ui:t,itemView:r,itemSelector:"article.link-item"}),this.parseModelsInDom(),this.initControls(),window.board=this},initControls:function(){var e=this;$('[data-module="board"]').find("form.addLinkToBoard").on("submit",function(t){t.preventDefault();var n=$(t.currentTarget).find('input[name="url"]'),r=n.val();n.val(""),e.app.isUrl(r)&&e.onLinkAdd(r)})},parseModelsInDom:function(){var e=this.collectionView.parseModels();this.collection.add(e,{silent:!0})},onLinkAdd:function(e){if(this.collection.findWhere({url:e})){console.log("already in collection");return}this.socket.emit("board/add/link",{_id:this.id,url:e});var n=new t({url:e},this.app);this.collection.add(n)}});return s})}();