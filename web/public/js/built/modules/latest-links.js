define("lib/module",[],function(){function e(e,t){if(!e)throw new TypeError("Module definition requires a name");this.name=e;for(var n in t)t.hasOwnProperty(n)&&(this[n]=t[n])}return e}),function(){var e="backbone";define("lib/socketCollection",[e],function(e){var t=e.Collection.extend({initSocketListeners:function(){if(!this.socketEvents)return;var e=this;_.each(this.socketEvents,function(t,n,r){if(typeof e[t]!="function")throw new TypeError("socketEvents needs to hold list of strings of function names");e.socket.on(n,_.bind(e[t],e))})}});return t})}(),function(){define("collections/latestLinkCollection",["lib/socketCollection"],function(e){var t=e.extend({initialize:function(e,t){this.socket=t,this.initSocketListeners()},socketEvents:{"link/add":"onLinkAdded"},initSocketListeners:function(){var e=this;_.each(this.socketEvents,function(t,n,r){if(typeof e[t]!="function")throw new TypeError("socketEvents needs to hold list of functions");e.socket.on(n,_.bind(e[t],e))})},onLinkAdded:function(e){this.add(e)}});return t})}(),function(){define("modules/latest-links",["lib/module","collections/latestLinkCollection"],function(e,t){var n=new e("latest-links",{init:function(e,n){this.app=e,this.ui=n,this.links=new t([],e.get("socket"))}});return n})}();